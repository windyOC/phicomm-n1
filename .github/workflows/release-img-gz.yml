name: Build Armbian

on:
#  release:
#    types: published
  push:
    branches:
      - focal
  schedule:
    - cron: 0 3 * * 5
#  watch:
#    types: started

#env:
#  RELEASE_SOURCE_TAG: v2017.11
#  BUILD_MINIMAL: yes
#  KERNEL_ONLY: no
#  KERNEL_CONFIGURE: no
#  BOARD: orangepilite
#  BRANCH: next
#  RELEASE: jessie
#  BUILD_DESKTOP: no

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff -a || echo "no swap,continue!" || exit
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: Download source code
      run: |
        git clone -b focal --single-branch https://github.com/windyOC/phicomm-n1.git

    - name: Get current date and head sha1
      id: date
      run: |
        echo "::set-output name=date::$(date +'%Y-%m-%d')"
        echo "::set-output name=sha::$(git rev-parse --short HEAD)"
    - name: Use Cache 
      id: cache-build
      uses: actions/cache@v2
      if: always()
      with:
        path: /tmp/armbian-cache.tar.xz
        key: ${{ runner.os }}-ccache-${{ steps.date.outputs.date }}-${{ steps.date.outputs.sha }}
        restore-keys: |
          ${{ runner.os }}-ccache-

    - name: Build Armbian
      id: build
      run: |
        cd phicomm-n1
        tar -xf /tmp/armbian-cache.tar.xz -C /var/lib/docker/volumes && rm -f /tmp/armbian-cache.tar.xz && echo "cache restore success"
        sudo -E ./compile.sh docker BOARD=arm-64 BRANCH=current RELEASE=focal BUILD_MINIMAL=no BUILD_DESKTOP=no KERNEL_ONLY=no KERNEL_CONFIGURE=no COMPRESS_OUTPUTIMAGE=sha,img MAINLINE_MIRROR=google FORCE_USE_RAMDISK=yes WIREGUARD=no USE_CCACHE=yes
        echo "::set-output name=status::success"
        echo "::set-output name=tag::$(date +"%Y.%m.%d-%H%M")"
        tar c output/images/*.img | xz -9ev -T0 - > /tmp/Armbian-N1-$(date +"%Y.%m.%d-%H%M").tar.xz 
        sudo -E tar c /var/lib/docker/volumes/armbian* | xz -9ev -T0 - > /tmp/armbian-cache.tar.xz



    - name: Release
      uses: softprops/action-gh-release@v1
      if: steps.build.outputs.status == 'success' && !cancelled()
      with:
        tag_name: Ubuntu-20.04-LTS(Focal)-${{ steps.date.outputs.date }}
        files: /tmp/Armbian*
